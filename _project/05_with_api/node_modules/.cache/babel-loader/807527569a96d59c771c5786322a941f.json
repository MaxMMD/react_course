{"ast":null,"code":"var _jsxFileName = \"/Users/oscar/code/lewagon/react_course/_project/05_with_api/src/components/containers/TaskContainer.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport '../../style/TaskContainer.scss';\nimport TaskGroup from '../ui/TaskGroup';\nimport PropTypes from 'prop-types';\n\nfunction TaskContainer(props) {\n  const {\n    tasks,\n    color,\n    handleTaskChange\n  } = props;\n  const lateTasks = tasks && tasks.filter(task => !task.done && moment(task.due_date).isBefore(moment()));\n  const doneTasks = tasks && tasks.filter(task => task.done);\n  const todoTasks = tasks && tasks.filter(task => !task.done && moment(task.due_date).isAfter(moment()));\n  return React.createElement(\"div\", {\n    className: \"TaskContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(TaskGroup, {\n    tasks: lateTasks,\n    color: color,\n    onChange: handleTaskChange,\n    label: \"Late\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(TaskGroup, {\n    tasks: todoTasks,\n    color: color,\n    onChange: handleTaskChange,\n    label: \"Todo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(TaskGroup, {\n    tasks: doneTasks,\n    color: color,\n    onChange: handleTaskChange,\n    label: \"Done\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n}\n\nTaskContainer.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  color: PropTypes.string.isRequired,\n  handleTaskChange: PropTypes.func.isRequired\n};\nexport default TaskContainer;","map":{"version":3,"sources":["/Users/oscar/code/lewagon/react_course/_project/05_with_api/src/components/containers/TaskContainer.js"],"names":["React","moment","TaskGroup","PropTypes","TaskContainer","props","tasks","color","handleTaskChange","lateTasks","filter","task","done","due_date","isBefore","doneTasks","todoTasks","isAfter","propTypes","array","isRequired","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,gCAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,MAAqCH,KAA3C;AACA,QAAMI,SAAS,GAAGH,KAAK,IAAIA,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAU,CAACA,IAAI,CAACC,IAAN,IAAcX,MAAM,CAACU,IAAI,CAACE,QAAN,CAAN,CAAsBC,QAAtB,CAA+Bb,MAAM,EAArC,CAArC,CAA3B;AACA,QAAMc,SAAS,GAAGT,KAAK,IAAIA,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,IAA5B,CAA3B;AACA,QAAMI,SAAS,GAAGV,KAAK,IAAIA,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAU,CAACA,IAAI,CAACC,IAAN,IAAcX,MAAM,CAACU,IAAI,CAACE,QAAN,CAAN,CAAsBI,OAAtB,CAA8BhB,MAAM,EAApC,CAArC,CAA3B;AACA,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEQ,SAAlB;AAA6B,IAAA,KAAK,EAAEF,KAApC;AAA2C,IAAA,QAAQ,EAAEC,gBAArD;AAAuE,IAAA,KAAK,EAAC,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEQ,SAAlB;AAA6B,IAAA,KAAK,EAAET,KAApC;AAA2C,IAAA,QAAQ,EAAEC,gBAArD;AAAuE,IAAA,KAAK,EAAC,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEO,SAAlB;AAA6B,IAAA,KAAK,EAAER,KAApC;AAA2C,IAAA,QAAQ,EAAEC,gBAArD;AAAuE,IAAA,KAAK,EAAC,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAEDJ,aAAa,CAACc,SAAd,GAA0B;AACxBZ,EAAAA,KAAK,EAAEH,SAAS,CAACgB,KAAV,CAAgBC,UADC;AAExBb,EAAAA,KAAK,EAAEJ,SAAS,CAACkB,MAAV,CAAiBD,UAFA;AAGxBZ,EAAAA,gBAAgB,EAAEL,SAAS,CAACmB,IAAV,CAAeF;AAHT,CAA1B;AAMA,eAAehB,aAAf","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nimport '../../style/TaskContainer.scss'\nimport TaskGroup from '../ui/TaskGroup'\nimport PropTypes from 'prop-types'\n\nfunction TaskContainer(props) {\n  const { tasks, color, handleTaskChange } = props\n  const lateTasks = tasks && tasks.filter((task) => !task.done && moment(task.due_date).isBefore(moment()))\n  const doneTasks = tasks && tasks.filter((task) => task.done)\n  const todoTasks = tasks && tasks.filter((task) => !task.done && moment(task.due_date).isAfter(moment()))\n  return (\n    <div className=\"TaskContainer\">\n      <TaskGroup tasks={lateTasks} color={color} onChange={handleTaskChange} label=\"Late\" />\n      <TaskGroup tasks={todoTasks} color={color} onChange={handleTaskChange} label=\"Todo\" />\n      <TaskGroup tasks={doneTasks} color={color} onChange={handleTaskChange} label=\"Done\" />\n    </div>\n  )\n}\n\nTaskContainer.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  color: PropTypes.string.isRequired,\n  handleTaskChange: PropTypes.func.isRequired,\n}\n\nexport default TaskContainer\n"]},"metadata":{},"sourceType":"module"}