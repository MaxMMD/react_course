{"ast":null,"code":"var _jsxFileName = \"/Users/oscar/code/lewagon/react_course/_project/05_with_api/src/components/containers/NewTaskForm.js\";\nimport React, { Component } from 'react';\nimport Input from '../ui/Input';\nimport Divider from '../ui/Divider';\nimport '../../style/NewTaskForm.scss';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Button from '../ui/Button';\n\nclass NewTaskForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateChange = date => {\n      this.setState({ ...this.state,\n        date\n      });\n    };\n\n    this.handleNoteChange = event => {\n      this.setState({ ...this.state,\n        note: event.target.value\n      });\n    };\n\n    this.handleTitleChange = event => {\n      this.setState({ ...this.state,\n        title: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        onSubmit\n      } = this.props;\n      const {\n        title,\n        date,\n        note\n      } = this.state;\n      onSubmit({\n        title,\n        note,\n        due_date: date.format(),\n        done: false\n      });\n    };\n\n    this.state = {\n      date: moment(),\n      note: '',\n      title: ''\n    };\n  }\n\n  render() {\n    const {\n      list\n    } = this.props;\n    const {\n      title,\n      date,\n      note\n    } = this.state;\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"NewTaskForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"NewTaskForm-fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      verticalMargin: 30,\n      stroke: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Input, {\n      label: \"What are you planning?\",\n      type: \"text\",\n      value: title,\n      color: list.color,\n      onChange: this.handleTitleChange,\n      autoFocus: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      verticalMargin: 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"date\",\n      value: date,\n      label: \"Set a due date\",\n      onChange: this.handleDateChange,\n      color: list.color,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      verticalMargin: 30,\n      stroke: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"text\",\n      label: \"Add note\",\n      value: note,\n      onChange: this.handleNoteChange,\n      color: list.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      verticalMargin: 30,\n      stroke: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      background: list.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Create task\"));\n  }\n\n}\n\nNewTaskForm.propTypes = {\n  list: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\nexport default NewTaskForm;","map":{"version":3,"sources":["/Users/oscar/code/lewagon/react_course/_project/05_with_api/src/components/containers/NewTaskForm.js"],"names":["React","Component","Input","Divider","PropTypes","moment","Button","NewTaskForm","constructor","props","handleDateChange","date","setState","state","handleNoteChange","event","note","target","value","handleTitleChange","title","handleSubmit","preventDefault","onSubmit","due_date","format","done","render","list","color","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Input from '../ui/Input'\nimport Divider from '../ui/Divider'\nimport '../../style/NewTaskForm.scss'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport Button from '../ui/Button'\n\nclass NewTaskForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      date: moment(),\n      note: '',\n      title: '',\n    }\n  }\n\n  handleDateChange = (date) => {\n    this.setState({\n      ...this.state,\n      date,\n    })\n  }\n\n  handleNoteChange = (event) => {\n    this.setState({\n      ...this.state,\n      note: event.target.value,\n    })\n  }\n\n  handleTitleChange = (event) => {\n    this.setState({\n      ...this.state,\n      title: event.target.value,\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    const {\n      onSubmit,\n    } = this.props\n    const {\n      title,\n      date,\n      note,\n    } = this.state\n    onSubmit({\n      title,\n      note,\n      due_date: date.format(),\n      done: false,\n    })\n  }\n\n  render() {\n    const {\n      list,\n    } = this.props\n\n    const {\n      title,\n      date,\n      note,\n    } = this.state\n    return (\n      <form onSubmit={this.handleSubmit} className=\"NewTaskForm\">\n        <div className=\"NewTaskForm-fields\">\n          <Divider verticalMargin={30} stroke={0} />\n          <Input\n            label=\"What are you planning?\"\n            type=\"text\"\n            value={title}\n            color={list.color}\n            onChange={this.handleTitleChange}\n            autoFocus\n            required\n          />\n          <Divider verticalMargin={30} />\n          <Input\n            type=\"date\"\n            value={date}\n            label=\"Set a due date\"\n            onChange={this.handleDateChange}\n            color={list.color}\n            required\n          />\n          <Divider verticalMargin={30} stroke={0} />\n          <Input\n            type=\"text\"\n            label=\"Add note\"\n            value={note}\n            onChange={this.handleNoteChange}\n            color={list.color}\n          />\n          <Divider verticalMargin={30} stroke={0} />\n        </div>\n        <Button type=\"submit\" background={list.color}>Create task</Button>\n      </form>\n    )\n  }\n}\n\nNewTaskForm.propTypes = {\n  list: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n}\n\nexport default NewTaskForm\n"]},"metadata":{},"sourceType":"module"}