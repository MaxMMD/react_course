{"ast":null,"code":"var _jsxFileName = \"/Users/oscar/code/lewagon/react_course/_project/05_with_api/src/components/ui/Task.js\";\nimport React from 'react';\nimport '../../style/Task.scss';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport colors from '../../utils/colors';\nimport Checkbox from './Checkbox';\n\nfunction Task(props) {\n  const {\n    title,\n    date,\n    done,\n    color,\n    onChange\n  } = props;\n  const momentDate = moment(date);\n  const isAfter = momentDate.isAfter(moment());\n  return React.createElement(\"div\", {\n    className: \"Task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Task-text\",\n    style: {\n      opacity: done ? 0.5 : 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"Task-label\",\n    style: {\n      textDecoration: done && 'line-through'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, title), React.createElement(\"p\", {\n    className: \"Task-date\",\n    style: {\n      color: !done && !isAfter && colors.danger\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, momentDate.format('H:mm MMMM D'))), React.createElement(Checkbox, {\n    checked: done,\n    color: color,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n}\n\nTask.propTypes = {\n  color: PropTypes.string,\n  done: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nTask.defaultProps = {\n  color: colors.primary\n};\nexport default Task;","map":{"version":3,"sources":["/Users/oscar/code/lewagon/react_course/_project/05_with_api/src/components/ui/Task.js"],"names":["React","moment","PropTypes","colors","Checkbox","Task","props","title","date","done","color","onChange","momentDate","isAfter","opacity","textDecoration","danger","format","propTypes","string","bool","isRequired","func","defaultProps","primary"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA;AALI,MAMFL,KANJ;AAQA,QAAMM,UAAU,GAAGX,MAAM,CAACO,IAAD,CAAzB;AACA,QAAMK,OAAO,GAAGD,UAAU,CAACC,OAAX,CAAmBZ,MAAM,EAAzB,CAAhB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,KAAK,EAAE;AACLa,MAAAA,OAAO,EAAEL,IAAI,GAAG,GAAH,GAAS;AADjB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,KAAK,EAAE;AACLM,MAAAA,cAAc,EAAEN,IAAI,IAAI;AADnB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGF,KANH,CANF,EAeE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,KAAK,EAAE;AACLG,MAAAA,KAAK,EAAE,CAACD,IAAD,IAAS,CAACI,OAAV,IAAqBV,MAAM,CAACa;AAD9B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGJ,UAAU,CAACK,MAAX,CAAkB,aAAlB,CANH,CAfF,CADF,EA0BE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAER,IAAnB;AAAyB,IAAA,KAAK,EAAEC,KAAhC;AAAuC,IAAA,QAAQ,EAAEC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CADF;AA8BD;;AAGDN,IAAI,CAACa,SAAL,GAAiB;AACfR,EAAAA,KAAK,EAAER,SAAS,CAACiB,MADF;AAEfV,EAAAA,IAAI,EAAEP,SAAS,CAACkB,IAAV,CAAeC,UAFN;AAGfd,EAAAA,KAAK,EAAEL,SAAS,CAACiB,MAAV,CAAiBE,UAHT;AAIfb,EAAAA,IAAI,EAAEN,SAAS,CAACiB,MAAV,CAAiBE,UAJR;AAKfV,EAAAA,QAAQ,EAAET,SAAS,CAACoB,IAAV,CAAeD;AALV,CAAjB;AAQAhB,IAAI,CAACkB,YAAL,GAAoB;AAClBb,EAAAA,KAAK,EAAEP,MAAM,CAACqB;AADI,CAApB;AAIA,eAAenB,IAAf","sourcesContent":["import React from 'react'\nimport '../../style/Task.scss'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport colors from '../../utils/colors'\nimport Checkbox from './Checkbox'\n\nfunction Task(props) {\n  const {\n    title,\n    date,\n    done,\n    color,\n    onChange,\n  } = props\n\n  const momentDate = moment(date)\n  const isAfter = momentDate.isAfter(moment())\n  return (\n    <div className=\"Task\">\n      <div\n        className=\"Task-text\"\n        style={{\n          opacity: done ? 0.5 : 1,\n        }}\n      >\n        <p\n          className=\"Task-label\"\n          style={{\n            textDecoration: done && 'line-through',\n          }}\n        >\n          {title}\n\n        </p>\n        <p\n          className=\"Task-date\"\n          style={{\n            color: !done && !isAfter && colors.danger,\n          }}\n        >\n          {momentDate.format('H:mm MMMM D')}\n\n        </p>\n      </div>\n      <Checkbox checked={done} color={color} onChange={onChange} />\n    </div>\n  )\n}\n\n\nTask.propTypes = {\n  color: PropTypes.string,\n  done: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\nTask.defaultProps = {\n  color: colors.primary,\n}\n\nexport default Task\n"]},"metadata":{},"sourceType":"module"}